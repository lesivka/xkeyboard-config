// $Xorg: xfree86,v 1.3 2000/08/17 19:54:42 cpqbld Exp $

//
//  Rules for resolving XKB components for use with XFree86
//  Copyright 1996 by Joseph Moss
//
//  2002 Modifier: Ivan Pascal      The XFree86 Project
//  $XFree86: xc/programs/xkbcomp/rules/xfree86,v 3.79 2004/01/09 00:16:01 dawes Exp $
//

// If you want non-latin layouts implicitly include the en_US layout
// uncomment lines below
//! $nonlatin = am ara ben bg by deva ge gr guj guru il \
//              ir iku kan lao mk mm mal ori ru scc syr tel th\
//              tj tam ua

! $pcmodels = pc101 pc102 pc104 pc105
! $maclaptop = ibook powerbook
! $mac = macintosh macintosh_old ibook powerbook

! $azerty = be fr
! $qwertz = al cz de hr hu ro si sk 

! $inetkbds = a4techKB21 a4techKBS8 acer_tm_800 acpi airkey azonaRF2300 \
              brother \
              btc5113rf btc5126t btc9000 btc9000a btc9001ah btc5090\
              cherryblue cherrybluea cherryblueb \
              chicony chicony9885 \
              compaqeak8 compaqik7 compaqik13 compaqik18 cymotionlinux \
              armada presario ipaq \
              dell inspiron dtk2000 \
              dexxa diamond genius geniuscomfy2 \
              ennyah_dkb1008 gyration \
              hpi6 hp2501 hp2505 hp5181 hpxe3gc hpxe3gf hpxe4xxx hpzt11xx \
              hp500fa hp5xx hp5185 \
              honeywell_euroboard \
              rapidaccess rapidaccess2 rapidaccess2a \
              ltcd logiaccess logicdp logicdpa logicdit logicink logiciink \
              logiinkse logiinkseusb logiitc logiik itouch logiultrax \
              mx1998 mx2500 mx2750 \
              microsoftinet microsoftpro microsoftprousb microsoftprooem microsoftprose \
              microsoftoffice microsoftmult \
              oretec \
              propeller scorpius \
              qtronix \
              samsung4500 samsung4510 \
              sk1300 sk2500 sk6200 sk7100 sp_inet \
              sven symplon toshiba_s3000 trust trustda yahoo

! $dvoraklayouts = fr gb no se

! model		=	keycodes
  macintosh_old	=	macintosh
  powerpcps2	=	powerpcps2
  pc98		=	xfree98(pc98)
  abnt2		=	xfree86(abnt2)
  jp106		=	xfree86(jp106)
  *		=	xfree86

! layout[1]	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)

! layout	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)

! model		=	geometry
  microsoft	=	microsoft(natural)
  microsoftpro	=	microsoft(natural)
  microsoftprousb =	microsoft(natural)
  microsoftprose =	microsoft(natural)
  dell101	=	dell(dell101)
  flexpro	=	keytronic(FlexPro)
  hp6000	=	hp(omnibook)
  omnikey101	=	northgate(omnikey101)
  thinkpad	=	ibm_vndr/thinkpad(common)
 $pcmodels	=	pc(%m)
  jp106		=	pc(jp106)
  everex	=	everex(STEPnote)
  winbook	=	winbook(XP5)
  pc98		=	nec(pc98)
  abnt2		=	pc(abnt2)
 $mac		=	macintosh(macintosh)
  *		=       pc(pc104)

! model		layout		variant		=	symbols
  $pcmodels	ben		basic		=	pc(%m)+in(ben)
  *		ben		basic		=	pc(pc105)+in(ben)
  $pcmodels	ben		probhat		=	pc(%m)+in(ben_probhat)
  *		ben		probhat		=	pc(pc105)+in(ben_probhat)
  $pcmodels	dev		basic		=	pc(%m)+in(deva)
  *		dev		basic		=	pc(pc105)+in(deva)
  $pcmodels	dvorak		$dvoraklayouts		=	pc(%m)+%l(dvorak)
  *		dvorak		$dvoraklayouts		=	pc(pc105)+%l(dvorak)
  $pcmodels	dvorak		basic		=	pc(%m)+us(dvorak)
  *		dvorak		basic		=	pc(pc105)+us(dvorak)
  $pcmodels	dvorak		pl_basic		=	pc(%m)+pl(dvorak)
  *		dvorak		pl_basic		=	pc(pc105)+pl(dvorak)
  $pcmodels	dvorak		pl		=	pc(%m)+pl(dvorak_quotes)
  *		dvorak		pl		=	pc(pc105)+pl(dvorak_quotes)
  $pcmodels	dvorak		pl_altquotes		=	pc(%m)+pl(dvorak_altquotes)
  *		dvorak		pl_altquotes		=	pc(pc105)+pl(dvorak_altquotes)
  $pcmodels	dzdwi		basic		=	pc(%m)+bt(basic)
  *		dzdwi		basic		=	pc(pc105)+bt(basic)
  $pcmodels	guj		basic		=	pc(%m)+in(guj)
  *		guj		basic		=	pc(pc105)+in(guj)
  $pcmodels	gur		basic		=	pc(%m)+in(guru)
  *		gur		basic		=	pc(pc105)+in(guru)
  $pcmodels	ie		laptop		=	pc(%m)+ie(basic)
  *		ie		laptop		=	pc(pc105)+ie(basic)
  $pcmodels	ie		CloGaelachLaptop		=	pc(%m)+ie(CloGaelach)
  *		ie		CloGaelachLaptop		=	pc(pc105)+ie(CloGaelach)
  $pcmodels	iu		basic		=	pc(%m)+ca(ike)
  *		iu		basic		=	pc(pc105)+ca(ike)
  $pcmodels	lo		basic		=	pc(%m)+la(basic)
  *		lo		basic		=	pc(pc105)+la(basic)
  $pcmodels	kan		basic		=	pc(%m)+in(kan)
  *		kan		basic		=	pc(pc105)+in(kan)
  $pcmodels	mal		basic		=	pc(%m)+in(mal)
  *		mal		basic		=	pc(pc105)+in(mal)
  $pcmodels	mal		mlplusnum		=	pc(%m)+in(mal)
  *		mal		mlplusnum		=	pc(pc105)+in(mal)
  $pcmodels	ogham		basic		=	pc(%m)+ie(ogam)
  *		ogham		basic		=	pc(pc105)+ie(ogam)
  $pcmodels	ogham		laptop		=	pc(%m)+ie(ogam)
  *		ogham		laptop		=	pc(pc105)+ie(ogam)
  $pcmodels	ogham		is434		=	pc(%m)+ie(ogam_is434)
  *		ogham		is434		=	pc(pc105)+ie(ogam_is434)
  $pcmodels	ogham		is434laptop		=	pc(%m)+ie(ogam_is434)
  *		ogham		is434laptop		=	pc(pc105)+ie(ogam_is434)
  $pcmodels	ori		basic		=	pc(%m)+in(ori)
  *		ori		basic		=	pc(pc105)+in(ori)
  $pcmodels	sapmi		basic		=	pc(%m)+no(smi)
  *		sapmi		basic		=	pc(pc105)+no(smi)
  $pcmodels	sapmi		nodeadkeys		=	pc(%m)+no(smi_nodeadkeys)
  *		sapmi		nodeadkeys		=	pc(pc105)+no(smi_nodeadkeys)
  $pcmodels	sapmi		sefi		=	pc(%m)+fi(smi)
  *		sapmi		sefi		=	pc(pc105)+fi(smi)
  $pcmodels	sin		phonetic-static		=	pc(%m)+in(sin_phonetic)
  *		sin		phonetic-static		=	pc(pc105)+in(sin_phonetic)
  $pcmodels	syr		basic		=	pc(%m)+sy(syc)
  *		syr		basic		=	pc(pc105)+sy(syc)
  $pcmodels	syr		phonetic		=	pc(%m)+sy(syc_phonetic)
  *		syr		phonetic		=	pc(pc105)+sy(syc_phonetic)
  $pcmodels	tam		INSCRIPT		=	pc(%m)+in(tam)
  *		tam		INSCRIPT		=	pc(pc105)+in(tam)
  $pcmodels	tam		UNI		=	pc(%m)+in(tam_unicode)
  *		tam		UNI		=	pc(pc105)+in(tam_unicode)
  $pcmodels	tam		TAB		=	pc(%m)+in(tam_TAB)
  *		tam		TAB		=	pc(pc105)+in(tam_TAB)
  $pcmodels	tam		TSCII		=	pc(%m)+in(tam_TSCII)
  *		tam		TSCII		=	pc(pc105)+in(tam_TSCII)
  $pcmodels	tel		basic		=	pc(%m)+in(tel)
  *		tel		basic		=	pc(pc105)+in(tel)
  $pcmodels	yu		basic		=	pc(%m)+srp(latin)
  *		yu		basic		=	pc(pc105)+srp(latin)
  $pcmodels	yu		unicode		=	pc(%m)+srp(latinunicode)
  *		yu		unicode		=	pc(pc105)+srp(latinunicode)
  $pcmodels	yu		yz		=	pc(%m)+srp(latinyz)
  *		yu		yz		=	pc(pc105)+srp(latinyz)
  $pcmodels	yu		unicodeyz		=	pc(%m)+srp(latinunicodeyz)
  *		yu		unicodeyz		=	pc(pc105)+srp(latinunicodeyz)
 $maclaptop	*		nodeadkeys	=	macintosh_vndr/us(extended)+macintosh_vndr/%l%(v)+macintosh_vndr/apple(laptop_bad_switch)
 $mac		*		nodeadkeys	=	macintosh_vndr/us(extended)+macintosh_vndr/%l%(v)

! model		layout				=	symbols
  $pcmodels	ar			=	pc(%m)+ara
  *		ar			=	pc(pc105)+ara
  $pcmodels	ben			=	pc(%m)+in(ben)
  *		ben			=	pc(pc105)+in(ben)
  $pcmodels	bs			=	pc(%m)+ba
  *		bs			=	pc(pc105)+ba
  $pcmodels	dev			=	pc(%m)+in(deva)
  *		dev			=	pc(pc105)+in(deva)
  $pcmodels	dvorak			=	pc(%m)+us(dvorak)
  *		dvorak			=	pc(pc105)+us(dvorak)
  $pcmodels	dzdwi			=	pc(%m)+bt
  *		dzdwi			=	pc(pc105)+bt
  $pcmodels	el			=	pc(%m)+gr
  *		el			=	pc(pc105)+gr
  $pcmodels	guj			=	pc(%m)+in(guj)
  *		guj			=	pc(pc105)+in(guj)
  $pcmodels	gur			=	pc(%m)+in(guru)
  *		gur			=	pc(pc105)+in(guru)
  $pcmodels	iu			=	pc(%m)+ca(ike)
  *		iu			=	pc(pc105)+ca(ike)
  $pcmodels	lo			=	pc(%m)+la
  *		lo			=	pc(pc105)+la
  $pcmodels	kan			=	pc(%m)+in(kan)
  *		kan			=	pc(pc105)+in(kan)
  $pcmodels	mi			=	pc(%m)+mao
  *		mi			=	pc(pc105)+mao
  $pcmodels	ml			=	pc(%m)+in(mal)
  *		ml			=	pc(pc105)+in(mal)
  $pcmodels	ogham			=	pc(%m)+ie(ogam)
  *		ogham			=	pc(pc105)+ie(ogam)
  $pcmodels	ori			=	pc(%m)+ie(ori)
  *		ori			=	pc(pc105)+ie(ori)
  $pcmodels	sapmi			=	pc(%m)+no(smi)
  *		sapmi			=	pc(pc105)+no(smi)
  $pcmodels	sr			=	pc(%m)+srp
  *		sr			=	pc(pc105)+srp
  $pcmodels	syr			=	pc(%m)+sy(syc)
  *		syr			=	pc(pc105)+sy(syc)
  $pcmodels	tel			=	pc(%m)+in(tel)
  *		tel			=	pc(pc105)+in(tel)
  $pcmodels	tml			=	pc(%m)+in(tam)
  *		tml			=	pc(pc105)+in(tam)
  $pcmodels	yu			=	pc(%m)+srp
  *		yu			=	pc(pc105)+srp
  $pcmodels	fr-latin9			=	pc(%m)+fr(latin9)
  *		fr-latin9			=	pc(pc105)+fr(latin9)
  $pcmodels	ben(basic)			=	pc(%m)+in(ben)
  *		ben(basic)			=	pc(pc105)+in(ben)
  $pcmodels	ben(probhat)			=	pc(%m)+in(ben_probhat)
  *		ben(probhat)			=	pc(pc105)+in(ben_probhat)
  $pcmodels	dev(basic)			=	pc(%m)+in(deva)
  *		dev(basic)			=	pc(pc105)+in(deva)
  $pcmodels	dvorak($dvoraklayouts)			=	pc(%m)+%l(dvorak)
  *		dvorak($dvoraklayouts)			=	pc(pc105)+%l(dvorak)
  $pcmodels	dvorak(basic)			=	pc(%m)+us(dvorak)
  *		dvorak(basic)			=	pc(pc105)+us(dvorak)
  $pcmodels	dvorak(pl_basic)			=	pc(%m)+pl(dvorak)
  *		dvorak(pl_basic)			=	pc(pc105)+pl(dvorak)
  $pcmodels	dvorak(pl)			=	pc(%m)+pl(dvorak_quotes)
  *		dvorak(pl)			=	pc(pc105)+pl(dvorak_quotes)
  $pcmodels	dvorak(pl_altquotes)			=	pc(%m)+pl(dvorak_altquotes)
  *		dvorak(pl_altquotes)			=	pc(pc105)+pl(dvorak_altquotes)
  $pcmodels	dzdwi(basic)			=	pc(%m)+bt(basic)
  *		dzdwi(basic)			=	pc(pc105)+bt(basic)
  $pcmodels	guj(basic)			=	pc(%m)+in(guj)
  *		guj(basic)			=	pc(pc105)+in(guj)
  $pcmodels	gur(basic)			=	pc(%m)+in(guru)
  *		gur(basic)			=	pc(pc105)+in(guru)
  $pcmodels	ie(laptop)			=	pc(%m)+ie(basic)
  *		ie(laptop)			=	pc(pc105)+ie(basic)
  $pcmodels	ie(CloGaelachLaptop)			=	pc(%m)+ie(CloGaelach)
  *		ie(CloGaelachLaptop)			=	pc(pc105)+ie(CloGaelach)
  $pcmodels	iu(basic)			=	pc(%m)+ca(ike)
  *		iu(basic)			=	pc(pc105)+ca(ike)
  $pcmodels	lo(basic)			=	pc(%m)+la(basic)
  *		lo(basic)			=	pc(pc105)+la(basic)
  $pcmodels	kan(basic)			=	pc(%m)+in(kan)
  *		kan(basic)			=	pc(pc105)+in(kan)
  $pcmodels	mal(basic)			=	pc(%m)+in(mal)
  *		mal(basic)			=	pc(pc105)+in(mal)
  $pcmodels	mal(mlplusnum)			=	pc(%m)+in(mal)
  *		mal(mlplusnum)			=	pc(pc105)+in(mal)
  $pcmodels	ogham(basic)			=	pc(%m)+ie(ogam)
  *		ogham(basic)			=	pc(pc105)+ie(ogam)
  $pcmodels	ogham(laptop)			=	pc(%m)+ie(ogam)
  *		ogham(laptop)			=	pc(pc105)+ie(ogam)
  $pcmodels	ogham(is434)			=	pc(%m)+ie(ogam_is434)
  *		ogham(is434)			=	pc(pc105)+ie(ogam_is434)
  $pcmodels	ogham(is434laptop)			=	pc(%m)+ie(ogam_is434)
  *		ogham(is434laptop)			=	pc(pc105)+ie(ogam_is434)
  $pcmodels	ori(basic)			=	pc(%m)+in(ori)
  *		ori(basic)			=	pc(pc105)+in(ori)
  $pcmodels	sapmi(basic)			=	pc(%m)+no(smi)
  *		sapmi(basic)			=	pc(pc105)+no(smi)
  $pcmodels	sapmi(nodeadkeys)			=	pc(%m)+no(smi_nodeadkeys)
  *		sapmi(nodeadkeys)			=	pc(pc105)+no(smi_nodeadkeys)
  $pcmodels	sapmi(sefi)			=	pc(%m)+fi(smi)
  *		sapmi(sefi)			=	pc(pc105)+fi(smi)
  $pcmodels	sin(phonetic-static)			=	pc(%m)+in(sin_phonetic)
  *		sin(phonetic-static)			=	pc(pc105)+in(sin_phonetic)
  $pcmodels	syr(basic)			=	pc(%m)+sy(syc)
  *		syr(basic)			=	pc(pc105)+sy(syc)
  $pcmodels	syr(phonetic)			=	pc(%m)+sy(syc_phonetic)
  *		syr(phonetic)			=	pc(pc105)+sy(syc_phonetic)
  $pcmodels	tam(INSCRIPT)			=	pc(%m)+in(tam)
  *		tam(INSCRIPT)			=	pc(pc105)+in(tam)
  $pcmodels	tam(UNI)			=	pc(%m)+in(tam_unicode)
  *		tam(UNI)			=	pc(pc105)+in(tam_unicode)
  $pcmodels	tam(TAB)			=	pc(%m)+in(tam_TAB)
  *		tam(TAB)			=	pc(pc105)+in(tam_TAB)
  $pcmodels	tam(TSCII)			=	pc(%m)+in(tam_TSCII)
  *		tam(TSCII)			=	pc(pc105)+in(tam_TSCII)
  $pcmodels	tel(basic)			=	pc(%m)+in(tel)
  *		tel(basic)			=	pc(pc105)+in(tel)
  $pcmodels	yu(basic)			=	pc(%m)+srp(latin)
  *		yu(basic)			=	pc(pc105)+srp(latin)
  $pcmodels	yu(unicode)			=	pc(%m)+srp(latinunicode)
  *		yu(unicode)			=	pc(pc105)+srp(latinunicode)
  $pcmodels	yu(yz)			=	pc(%m)+srp(latinyz)
  *		yu(yz)			=	pc(pc105)+srp(latinyz)
  $pcmodels	yu(unicodeyz)			=	pc(%m)+srp(latinunicodeyz)
  *		yu(unicodeyz)			=	pc(pc105)+srp(latinunicodeyz)
  pc98		nec/jp			=	nec_vndr/jp(pc98)
  abnt2		br			=	pc(pc104)+br
 $maclaptop	us			=	macintosh_vndr/us(extended)+macintosh_vndr/apple(laptop_bad_switch)
 $maclaptop	en_US			=	macintosh_vndr/us(extended)+macintosh_vndr/apple(laptop_bad_switch)
 $maclaptop	*			=	macintosh_vndr/us(extended)+apple(laptop_bad_switch)+macintosh_vndr/%l%(v)
 $mac		us			=	macintosh_vndr/us(extended)
 $mac		en_US			=	macintosh_vndr/us(extended)
 $mac		*			=	macintosh_vndr/us(extended)+macintosh_vndr/%l%(v)
 $pcmodels      intl   			=       us(%mcompose)
  *		intl			=	us(pc104compose)
  *		jp			=	pc(pc102)+jp(latin)+jp:2
 $pcmodels $nonlatin			=	pc(%m)+us+%l%(v):2
 $pcmodels	*			=	pc(%m)+%l%(v)
  *	   $nonlatin			=	pc(pc105)+us+%l%(v):2
  *		*			=	pc(pc105)+%l%(v)

! model		layout[1]			=	symbols
  $pcmodels	ar			=	pc(%m)+ara%(v[1])
  *		ar			=	pc(pc105)+ara%(v[1])
  $pcmodels	ben			=	pc(%m)+in(ben)%(v[1])
  *		ben			=	pc(pc105)+in(ben)%(v[1])
  $pcmodels	bs			=	pc(%m)+ba%(v[1])
  *		bs			=	pc(pc105)+ba%(v[1])
  $pcmodels	dev			=	pc(%m)+in(deva)%(v[1])
  *		dev			=	pc(pc105)+in(deva)%(v[1])
  $pcmodels	dvorak			=	pc(%m)+us(dvorak)%(v[1])
  *		dvorak			=	pc(pc105)+us(dvorak)%(v[1])
  $pcmodels	dzdwi			=	pc(%m)+bt%(v[1])
  *		dzdwi			=	pc(pc105)+bt%(v[1])
  $pcmodels	el			=	pc(%m)+gr%(v[1])
  *		el			=	pc(pc105)+gr%(v[1])
  $pcmodels	guj			=	pc(%m)+in(guj)%(v[1])
  *		guj			=	pc(pc105)+in(guj)%(v[1])
  $pcmodels	gur			=	pc(%m)+in(guru)%(v[1])
  *		gur			=	pc(pc105)+in(guru)%(v[1])
  $pcmodels	iu			=	pc(%m)+ca(ike)%(v[1])
  *		iu			=	pc(pc105)+ca(ike)%(v[1])
  $pcmodels	lo			=	pc(%m)+la%(v[1])
  *		lo			=	pc(pc105)+la%(v[1])
  $pcmodels	kan			=	pc(%m)+in(kan)%(v[1])
  *		kan			=	pc(pc105)+in(kan)%(v[1])
  $pcmodels	mi			=	pc(%m)+mao%(v[1])
  *		mi			=	pc(pc105)+mao%(v[1])
  $pcmodels	ml			=	pc(%m)+in(mal)%(v[1])
  *		ml			=	pc(pc105)+in(mal)%(v[1])
  $pcmodels	ogham			=	pc(%m)+ie(ogam)%(v[1])
  *		ogham			=	pc(pc105)+ie(ogam)%(v[1])
  $pcmodels	ori			=	pc(%m)+ie(ori)%(v[1])
  *		ori			=	pc(pc105)+ie(ori)%(v[1])
  $pcmodels	sapmi			=	pc(%m)+no(smi)%(v[1])
  *		sapmi			=	pc(pc105)+no(smi)%(v[1])
  $pcmodels	sr			=	pc(%m)+srp%(v[1])
  *		sr			=	pc(pc105)+srp%(v[1])
  $pcmodels	syr			=	pc(%m)+sy(syc)%(v[1])
  *		syr			=	pc(pc105)+sy(syc)%(v[1])
  $pcmodels	tel			=	pc(%m)+in(tel)%(v[1])
  *		tel			=	pc(pc105)+in(tel)%(v[1])
  $pcmodels	tml			=	pc(%m)+in(tam)%(v[1])
  *		tml			=	pc(pc105)+in(tam)%(v[1])
  $pcmodels	yu			=	pc(%m)+srp%(v[1])
  *		yu			=	pc(pc105)+srp%(v[1])
  $pcmodels	fr-latin9			=	pc(%m)+fr(latin9)%(v[1])
  *		fr-latin9			=	pc(pc105)+fr(latin9)%(v[1])
  $pcmodels	ben(basic)			=	pc(%m)+in(ben)
  *		ben(basic)			=	pc(pc105)+in(ben)
  $pcmodels	ben(probhat)			=	pc(%m)+in(ben_probhat)
  *		ben(probhat)			=	pc(pc105)+in(ben_probhat)
  $pcmodels	dev(basic)			=	pc(%m)+in(deva)
  *		dev(basic)			=	pc(pc105)+in(deva)
  $pcmodels	dvorak($dvoraklayouts)			=	pc(%m)+%l(dvorak)
  *		dvorak($dvoraklayouts)			=	pc(pc105)+%l(dvorak)
  $pcmodels	dvorak(basic)			=	pc(%m)+us(dvorak)
  *		dvorak(basic)			=	pc(pc105)+us(dvorak)
  $pcmodels	dvorak(pl_basic)			=	pc(%m)+pl(dvorak)
  *		dvorak(pl_basic)			=	pc(pc105)+pl(dvorak)
  $pcmodels	dvorak(pl)			=	pc(%m)+pl(dvorak_quotes)
  *		dvorak(pl)			=	pc(pc105)+pl(dvorak_quotes)
  $pcmodels	dvorak(pl_altquotes)			=	pc(%m)+pl(dvorak_altquotes)
  *		dvorak(pl_altquotes)			=	pc(pc105)+pl(dvorak_altquotes)
  $pcmodels	dzdwi(basic)			=	pc(%m)+bt(basic)
  *		dzdwi(basic)			=	pc(pc105)+bt(basic)
  $pcmodels	guj(basic)			=	pc(%m)+in(guj)
  *		guj(basic)			=	pc(pc105)+in(guj)
  $pcmodels	gur(basic)			=	pc(%m)+in(guru)
  *		gur(basic)			=	pc(pc105)+in(guru)
  $pcmodels	ie(laptop)			=	pc(%m)+ie(basic)
  *		ie(laptop)			=	pc(pc105)+ie(basic)
  $pcmodels	ie(CloGaelachLaptop)			=	pc(%m)+ie(CloGaelach)
  *		ie(CloGaelachLaptop)			=	pc(pc105)+ie(CloGaelach)
  $pcmodels	iu(basic)			=	pc(%m)+ca(ike)
  *		iu(basic)			=	pc(pc105)+ca(ike)
  $pcmodels	lo(basic)			=	pc(%m)+la(basic)
  *		lo(basic)			=	pc(pc105)+la(basic)
  $pcmodels	kan(basic)			=	pc(%m)+in(kan)
  *		kan(basic)			=	pc(pc105)+in(kan)
  $pcmodels	mal(basic)			=	pc(%m)+in(mal)
  *		mal(basic)			=	pc(pc105)+in(mal)
  $pcmodels	mal(mlplusnum)			=	pc(%m)+in(mal)
  *		mal(mlplusnum)			=	pc(pc105)+in(mal)
  $pcmodels	ogham(basic)			=	pc(%m)+ie(ogam)
  *		ogham(basic)			=	pc(pc105)+ie(ogam)
  $pcmodels	ogham(laptop)			=	pc(%m)+ie(ogam)
  *		ogham(laptop)			=	pc(pc105)+ie(ogam)
  $pcmodels	ogham(is434)			=	pc(%m)+ie(ogam_is434)
  *		ogham(is434)			=	pc(pc105)+ie(ogam_is434)
  $pcmodels	ogham(is434laptop)			=	pc(%m)+ie(ogam_is434)
  *		ogham(is434laptop)			=	pc(pc105)+ie(ogam_is434)
  $pcmodels	ori(basic)			=	pc(%m)+in(ori)
  *		ori(basic)			=	pc(pc105)+in(ori)
  $pcmodels	sapmi(basic)			=	pc(%m)+no(smi)
  *		sapmi(basic)			=	pc(pc105)+no(smi)
  $pcmodels	sapmi(nodeadkeys)			=	pc(%m)+no(smi_nodeadkeys)
  *		sapmi(nodeadkeys)			=	pc(pc105)+no(smi_nodeadkeys)
  $pcmodels	sapmi(sefi)			=	pc(%m)+fi(smi)
  *		sapmi(sefi)			=	pc(pc105)+fi(smi)
  $pcmodels	sin(phonetic-static)			=	pc(%m)+in(sin_phonetic)
  *		sin(phonetic-static)			=	pc(pc105)+in(sin_phonetic)
  $pcmodels	syr(basic)			=	pc(%m)+sy(syc)
  *		syr(basic)			=	pc(pc105)+sy(syc)
  $pcmodels	syr(phonetic)			=	pc(%m)+sy(syc_phonetic)
  *		syr(phonetic)			=	pc(pc105)+sy(syc_phonetic)
  $pcmodels	tam(INSCRIPT)			=	pc(%m)+in(tam)
  *		tam(INSCRIPT)			=	pc(pc105)+in(tam)
  $pcmodels	tam(UNI)			=	pc(%m)+in(tam_unicode)
  *		tam(UNI)			=	pc(pc105)+in(tam_unicode)
  $pcmodels	tam(TAB)			=	pc(%m)+in(tam_TAB)
  *		tam(TAB)			=	pc(pc105)+in(tam_TAB)
  $pcmodels	tam(TSCII)			=	pc(%m)+in(tam_TSCII)
  *		tam(TSCII)			=	pc(pc105)+in(tam_TSCII)
  $pcmodels	tel(basic)			=	pc(%m)+in(tel)
  *		tel(basic)			=	pc(pc105)+in(tel)
  $pcmodels	yu(basic)			=	pc(%m)+srp(latin)
  *		yu(basic)			=	pc(pc105)+srp(latin)
  $pcmodels	yu(unicode)			=	pc(%m)+srp(latinunicode)
  *		yu(unicode)			=	pc(pc105)+srp(latinunicode)
  $pcmodels	yu(yz)			=	pc(%m)+srp(latinyz)
  *		yu(yz)			=	pc(pc105)+srp(latinyz)
  $pcmodels	yu(unicodeyz)			=	pc(%m)+srp(latinunicodeyz)
  *		yu(unicodeyz)			=	pc(pc105)+srp(latinunicodeyz)
 $pcmodels	*			=	pc(%m)+%l[1]%(v[1])
  *		*			=	pc(pc105)+%l[1]%(v[1])

! model		layout[1]	variant[1]	=	symbols
  $pcmodels	ben		basic		=	pc(%m)+in(ben)
  *		ben		basic		=	pc(pc105)+in(ben)
  $pcmodels	ben		probhat		=	pc(%m)+in(ben_probhat)
  *		ben		probhat		=	pc(pc105)+in(ben_probhat)
  $pcmodels	dev		basic		=	pc(%m)+in(deva)
  *		dev		basic		=	pc(pc105)+in(deva)
  $pcmodels	dvorak		$dvoraklayouts		=	pc(%m)+%l(dvorak)
  *		dvorak		$dvoraklayouts		=	pc(pc105)+%l(dvorak)
  $pcmodels	dvorak		basic		=	pc(%m)+us(dvorak)
  *		dvorak		basic		=	pc(pc105)+us(dvorak)
  $pcmodels	dvorak		pl_basic		=	pc(%m)+pl(dvorak)
  *		dvorak		pl_basic		=	pc(pc105)+pl(dvorak)
  $pcmodels	dvorak		pl		=	pc(%m)+pl(dvorak_quotes)
  *		dvorak		pl		=	pc(pc105)+pl(dvorak_quotes)
  $pcmodels	dvorak		pl_altquotes		=	pc(%m)+pl(dvorak_altquotes)
  *		dvorak		pl_altquotes		=	pc(pc105)+pl(dvorak_altquotes)
  $pcmodels	dzdwi		basic		=	pc(%m)+bt(basic)
  *		dzdwi		basic		=	pc(pc105)+bt(basic)
  $pcmodels	guj		basic		=	pc(%m)+in(guj)
  *		guj		basic		=	pc(pc105)+in(guj)
  $pcmodels	gur		basic		=	pc(%m)+in(guru)
  *		gur		basic		=	pc(pc105)+in(guru)
  $pcmodels	ie		laptop		=	pc(%m)+ie(basic)
  *		ie		laptop		=	pc(pc105)+ie(basic)
  $pcmodels	ie		CloGaelachLaptop		=	pc(%m)+ie(CloGaelach)
  *		ie		CloGaelachLaptop		=	pc(pc105)+ie(CloGaelach)
  $pcmodels	iu		basic		=	pc(%m)+ca(ike)
  *		iu		basic		=	pc(pc105)+ca(ike)
  $pcmodels	lo		basic		=	pc(%m)+la(basic)
  *		lo		basic		=	pc(pc105)+la(basic)
  $pcmodels	kan		basic		=	pc(%m)+in(kan)
  *		kan		basic		=	pc(pc105)+in(kan)
  $pcmodels	mal		basic		=	pc(%m)+in(mal)
  *		mal		basic		=	pc(pc105)+in(mal)
  $pcmodels	mal		mlplusnum		=	pc(%m)+in(mal)
  *		mal		mlplusnum		=	pc(pc105)+in(mal)
  $pcmodels	ogham		basic		=	pc(%m)+ie(ogam)
  *		ogham		basic		=	pc(pc105)+ie(ogam)
  $pcmodels	ogham		laptop		=	pc(%m)+ie(ogam)
  *		ogham		laptop		=	pc(pc105)+ie(ogam)
  $pcmodels	ogham		is434		=	pc(%m)+ie(ogam_is434)
  *		ogham		is434		=	pc(pc105)+ie(ogam_is434)
  $pcmodels	ogham		is434laptop		=	pc(%m)+ie(ogam_is434)
  *		ogham		is434laptop		=	pc(pc105)+ie(ogam_is434)
  $pcmodels	ori		basic		=	pc(%m)+in(ori)
  *		ori		basic		=	pc(pc105)+in(ori)
  $pcmodels	sapmi		basic		=	pc(%m)+no(smi)
  *		sapmi		basic		=	pc(pc105)+no(smi)
  $pcmodels	sapmi		nodeadkeys		=	pc(%m)+no(smi_nodeadkeys)
  *		sapmi		nodeadkeys		=	pc(pc105)+no(smi_nodeadkeys)
  $pcmodels	sapmi		sefi		=	pc(%m)+fi(smi)
  *		sapmi		sefi		=	pc(pc105)+fi(smi)
  $pcmodels	sin		phonetic-static		=	pc(%m)+in(sin_phonetic)
  *		sin		phonetic-static		=	pc(pc105)+in(sin_phonetic)
  $pcmodels	syr		basic		=	pc(%m)+sy(syc)
  *		syr		basic		=	pc(pc105)+sy(syc)
  $pcmodels	syr		phonetic		=	pc(%m)+sy(syc_phonetic)
  *		syr		phonetic		=	pc(pc105)+sy(syc_phonetic)
  $pcmodels	tam		INSCRIPT		=	pc(%m)+in(tam)
  *		tam		INSCRIPT		=	pc(pc105)+in(tam)
  $pcmodels	tam		UNI		=	pc(%m)+in(tam_unicode)
  *		tam		UNI		=	pc(pc105)+in(tam_unicode)
  $pcmodels	tam		TAB		=	pc(%m)+in(tam_TAB)
  *		tam		TAB		=	pc(pc105)+in(tam_TAB)
  $pcmodels	tam		TSCII		=	pc(%m)+in(tam_TSCII)
  *		tam		TSCII		=	pc(pc105)+in(tam_TSCII)
  $pcmodels	tel		basic		=	pc(%m)+in(tel)
  *		tel		basic		=	pc(pc105)+in(tel)
  $pcmodels	yu		basic		=	pc(%m)+srp(latin)
  *		yu		basic		=	pc(pc105)+srp(latin)
  $pcmodels	yu		unicode		=	pc(%m)+srp(latinunicode)
  *		yu		unicode		=	pc(pc105)+srp(latinunicode)
  $pcmodels	yu		yz		=	pc(%m)+srp(latinyz)
  *		yu		yz		=	pc(pc105)+srp(latinyz)
  $pcmodels	yu		unicodeyz		=	pc(%m)+srp(latinunicodeyz)
  *		yu		unicodeyz		=	pc(pc105)+srp(latinunicodeyz)

! layout[2]	=	symbols
  ar		=	+ara%(v[2]):2
  ben		=	+in(ben)%(v[2]):2
  bs		=	+ba%(v[2]):2
  dev		=	+in(deva)%(v[2]):2
  dvorak		=	+us(dvorak)%(v[2]):2
  dzdwi		=	+bt%(v[2]):2
  el		=	+gr%(v[2]):2
  guj		=	+in(guj)%(v[2]):2
  gur		=	+in(guru)%(v[2]):2
  iu		=	+ca(ike)%(v[2]):2
  lo		=	+la%(v[2]):2
  kan		=	+in(kan)%(v[2]):2
  mi		=	+mao%(v[2]):2
  ml		=	+in(mal)%(v[2]):2
  ogham		=	+ie(ogam)%(v[2]):2
  ori		=	+ie(ori)%(v[2]):2
  sapmi		=	+no(smi)%(v[2]):2
  sr		=	+srp%(v[2]):2
  syr		=	+sy(syc)%(v[2]):2
  tel		=	+in(tel)%(v[2]):2
  tml		=	+in(tam)%(v[2]):2
  yu		=	+srp%(v[2]):2
  fr-latin9		=	+fr(latin9)%(v[2]):2
  ben(basic)	=	+in(ben):2
  ben(probhat)	=	+in(ben_probhat):2
  dev(basic)	=	+in(deva):2
  dvorak($dvoraklayouts)	=	+%l(dvorak):2
  dvorak(basic)	=	+us(dvorak):2
  dvorak(pl_basic)	=	+pl(dvorak):2
  dvorak(pl)	=	+pl(dvorak_quotes):2
  dvorak(pl_altquotes)	=	+pl(dvorak_altquotes):2
  dzdwi(basic)	=	+bt(basic):2
  guj(basic)	=	+in(guj):2
  gur(basic)	=	+in(guru):2
  ie(laptop)	=	+ie(basic):2
  ie(CloGaelachLaptop)	=	+ie(CloGaelach):2
  iu(basic)	=	+ca(ike):2
  lo(basic)	=	+la(basic):2
  kan(basic)	=	+in(kan):2
  mal(basic)	=	+in(mal):2
  mal(mlplusnum)	=	+in(mal):2
  ogham(basic)	=	+ie(ogam):2
  ogham(laptop)	=	+ie(ogam):2
  ogham(is434)	=	+ie(ogam_is434):2
  ogham(is434laptop)	=	+ie(ogam_is434):2
  ori(basic)	=	+in(ori):2
  sapmi(basic)	=	+no(smi):2
  sapmi(nodeadkeys)	=	+no(smi_nodeadkeys):2
  sapmi(sefi)	=	+fi(smi):2
  sin(phonetic-static)	=	+in(sin_phonetic):2
  syr(basic)	=	+sy(syc):2
  syr(phonetic)	=	+sy(syc_phonetic):2
  tam(INSCRIPT)	=	+in(tam):2
  tam(UNI)	=	+in(tam_unicode):2
  tam(TAB)	=	+in(tam_TAB):2
  tam(TSCII)	=	+in(tam_TSCII):2
  tel(basic)	=	+in(tel):2
  yu(basic)	=	+srp(latin):2
  yu(unicode)	=	+srp(latinunicode):2
  yu(yz)	=	+srp(latinyz):2
  yu(unicodeyz)	=	+srp(latinunicodeyz):2
  *		=	+%l[2]%(v[2]):2

! layout[3]	=	symbols
  ar		=	+ara%(v[3]):3
  ben		=	+in(ben)%(v[3]):3
  bs		=	+ba%(v[3]):3
  dev		=	+in(deva)%(v[3]):3
  dvorak		=	+us(dvorak)%(v[3]):3
  dzdwi		=	+bt%(v[3]):3
  el		=	+gr%(v[3]):3
  guj		=	+in(guj)%(v[3]):3
  gur		=	+in(guru)%(v[3]):3
  iu		=	+ca(ike)%(v[3]):3
  lo		=	+la%(v[3]):3
  kan		=	+in(kan)%(v[3]):3
  mi		=	+mao%(v[3]):3
  ml		=	+in(mal)%(v[3]):3
  ogham		=	+ie(ogam)%(v[3]):3
  ori		=	+ie(ori)%(v[3]):3
  sapmi		=	+no(smi)%(v[3]):3
  sr		=	+srp%(v[3]):3
  syr		=	+sy(syc)%(v[3]):3
  tel		=	+in(tel)%(v[3]):3
  tml		=	+in(tam)%(v[3]):3
  yu		=	+srp%(v[3]):3
  fr-latin9		=	+fr(latin9)%(v[3]):3
  ben(basic)	=	+in(ben):3
  ben(probhat)	=	+in(ben_probhat):3
  dev(basic)	=	+in(deva):3
  dvorak($dvoraklayouts)	=	+%l(dvorak):3
  dvorak(basic)	=	+us(dvorak):3
  dvorak(pl_basic)	=	+pl(dvorak):3
  dvorak(pl)	=	+pl(dvorak_quotes):3
  dvorak(pl_altquotes)	=	+pl(dvorak_altquotes):3
  dzdwi(basic)	=	+bt(basic):3
  guj(basic)	=	+in(guj):3
  gur(basic)	=	+in(guru):3
  ie(laptop)	=	+ie(basic):3
  ie(CloGaelachLaptop)	=	+ie(CloGaelach):3
  iu(basic)	=	+ca(ike):3
  lo(basic)	=	+la(basic):3
  kan(basic)	=	+in(kan):3
  mal(basic)	=	+in(mal):3
  mal(mlplusnum)	=	+in(mal):3
  ogham(basic)	=	+ie(ogam):3
  ogham(laptop)	=	+ie(ogam):3
  ogham(is434)	=	+ie(ogam_is434):3
  ogham(is434laptop)	=	+ie(ogam_is434):3
  ori(basic)	=	+in(ori):3
  sapmi(basic)	=	+no(smi):3
  sapmi(nodeadkeys)	=	+no(smi_nodeadkeys):3
  sapmi(sefi)	=	+fi(smi):3
  sin(phonetic-static)	=	+in(sin_phonetic):3
  syr(basic)	=	+sy(syc):3
  syr(phonetic)	=	+sy(syc_phonetic):3
  tam(INSCRIPT)	=	+in(tam):3
  tam(UNI)	=	+in(tam_unicode):3
  tam(TAB)	=	+in(tam_TAB):3
  tam(TSCII)	=	+in(tam_TSCII):3
  tel(basic)	=	+in(tel):3
  yu(basic)	=	+srp(latin):3
  yu(unicode)	=	+srp(latinunicode):3
  yu(yz)	=	+srp(latinyz):3
  yu(unicodeyz)	=	+srp(latinunicodeyz):3
  *		=	+%l[3]%(v[3]):3

! layout[4]	=	symbols
  ar		=	+ara%(v[4]):4
  ben		=	+in(ben)%(v[4]):4
  bs		=	+ba%(v[4]):4
  dev		=	+in(deva)%(v[4]):4
  dvorak		=	+us(dvorak)%(v[4]):4
  dzdwi		=	+bt%(v[4]):4
  el		=	+gr%(v[4]):4
  guj		=	+in(guj)%(v[4]):4
  gur		=	+in(guru)%(v[4]):4
  iu		=	+ca(ike)%(v[4]):4
  lo		=	+la%(v[4]):4
  kan		=	+in(kan)%(v[4]):4
  mi		=	+mao%(v[4]):4
  ml		=	+in(mal)%(v[4]):4
  ogham		=	+ie(ogam)%(v[4]):4
  ori		=	+ie(ori)%(v[4]):4
  sapmi		=	+no(smi)%(v[4]):4
  sr		=	+srp%(v[4]):4
  syr		=	+sy(syc)%(v[4]):4
  tel		=	+in(tel)%(v[4]):4
  tml		=	+in(tam)%(v[4]):4
  yu		=	+srp%(v[4]):4
  fr-latin9		=	+fr(latin9)%(v[4]):4
  ben(basic)	=	+in(ben):4
  ben(probhat)	=	+in(ben_probhat):4
  dev(basic)	=	+in(deva):4
  dvorak($dvoraklayouts)	=	+%l(dvorak):4
  dvorak(basic)	=	+us(dvorak):4
  dvorak(pl_basic)	=	+pl(dvorak):4
  dvorak(pl)	=	+pl(dvorak_quotes):4
  dvorak(pl_altquotes)	=	+pl(dvorak_altquotes):4
  dzdwi(basic)	=	+bt(basic):4
  guj(basic)	=	+in(guj):4
  gur(basic)	=	+in(guru):4
  ie(laptop)	=	+ie(basic):4
  ie(CloGaelachLaptop)	=	+ie(CloGaelach):4
  iu(basic)	=	+ca(ike):4
  lo(basic)	=	+la(basic):4
  kan(basic)	=	+in(kan):4
  mal(basic)	=	+in(mal):4
  mal(mlplusnum)	=	+in(mal):4
  ogham(basic)	=	+ie(ogam):4
  ogham(laptop)	=	+ie(ogam):4
  ogham(is434)	=	+ie(ogam_is434):4
  ogham(is434laptop)	=	+ie(ogam_is434):4
  ori(basic)	=	+in(ori):4
  sapmi(basic)	=	+no(smi):4
  sapmi(nodeadkeys)	=	+no(smi_nodeadkeys):4
  sapmi(sefi)	=	+fi(smi):4
  sin(phonetic-static)	=	+in(sin_phonetic):4
  syr(basic)	=	+sy(syc):4
  syr(phonetic)	=	+sy(syc_phonetic):4
  tam(INSCRIPT)	=	+in(tam):4
  tam(UNI)	=	+in(tam_unicode):4
  tam(TAB)	=	+in(tam_TAB):4
  tam(TSCII)	=	+in(tam_TSCII):4
  tel(basic)	=	+in(tel):4
  yu(basic)	=	+srp(latin):4
  yu(unicode)	=	+srp(latinunicode):4
  yu(yz)	=	+srp(latinyz):4
  yu(unicodeyz)	=	+srp(latinunicodeyz):4
  *		=	+%l[4]%(v[4]):4

! layout[2]	variant[2]	=	symbols
  ben		basic	=	+in(ben):2
  ben		probhat	=	+in(ben_probhat):2
  dev		basic	=	+in(deva):2
  dvorak		$dvoraklayouts	=	+%l(dvorak):2
  dvorak		basic	=	+us(dvorak):2
  dvorak		pl_basic	=	+pl(dvorak):2
  dvorak		pl	=	+pl(dvorak_quotes):2
  dvorak		pl_altquotes	=	+pl(dvorak_altquotes):2
  dzdwi		basic	=	+bt(basic):2
  guj		basic	=	+in(guj):2
  gur		basic	=	+in(guru):2
  ie		laptop	=	+ie(basic):2
  ie		CloGaelachLaptop	=	+ie(CloGaelach):2
  iu		basic	=	+ca(ike):2
  lo		basic	=	+la(basic):2
  kan		basic	=	+in(kan):2
  mal		basic	=	+in(mal):2
  mal		mlplusnum	=	+in(mal):2
  ogham		basic	=	+ie(ogam):2
  ogham		laptop	=	+ie(ogam):2
  ogham		is434	=	+ie(ogam_is434):2
  ogham		is434laptop	=	+ie(ogam_is434):2
  ori		basic	=	+in(ori):2
  sapmi		basic	=	+no(smi):2
  sapmi		nodeadkeys	=	+no(smi_nodeadkeys):2
  sapmi		sefi	=	+fi(smi):2
  sin		phonetic-static	=	+in(sin_phonetic):2
  syr		basic	=	+sy(syc):2
  syr		phonetic	=	+sy(syc_phonetic):2
  tam		INSCRIPT	=	+in(tam):2
  tam		UNI	=	+in(tam_unicode):2
  tam		TAB	=	+in(tam_TAB):2
  tam		TSCII	=	+in(tam_TSCII):2
  tel		basic	=	+in(tel):2
  yu		basic	=	+srp(latin):2
  yu		unicode	=	+srp(latinunicode):2
  yu		yz	=	+srp(latinyz):2
  yu		unicodeyz	=	+srp(latinunicodeyz):2

! layout[3]	variant[3]	=	symbols
  ben		basic	=	+in(ben):3
  ben		probhat	=	+in(ben_probhat):3
  dev		basic	=	+in(deva):3
  dvorak		$dvoraklayouts	=	+%l(dvorak):3
  dvorak		basic	=	+us(dvorak):3
  dvorak		pl_basic	=	+pl(dvorak):3
  dvorak		pl	=	+pl(dvorak_quotes):3
  dvorak		pl_altquotes	=	+pl(dvorak_altquotes):3
  dzdwi		basic	=	+bt(basic):3
  guj		basic	=	+in(guj):3
  gur		basic	=	+in(guru):3
  ie		laptop	=	+ie(basic):3
  ie		CloGaelachLaptop	=	+ie(CloGaelach):3
  iu		basic	=	+ca(ike):3
  lo		basic	=	+la(basic):3
  kan		basic	=	+in(kan):3
  mal		basic	=	+in(mal):3
  mal		mlplusnum	=	+in(mal):3
  ogham		basic	=	+ie(ogam):3
  ogham		laptop	=	+ie(ogam):3
  ogham		is434	=	+ie(ogam_is434):3
  ogham		is434laptop	=	+ie(ogam_is434):3
  ori		basic	=	+in(ori):3
  sapmi		basic	=	+no(smi):3
  sapmi		nodeadkeys	=	+no(smi_nodeadkeys):3
  sapmi		sefi	=	+fi(smi):3
  sin		phonetic-static	=	+in(sin_phonetic):3
  syr		basic	=	+sy(syc):3
  syr		phonetic	=	+sy(syc_phonetic):3
  tam		INSCRIPT	=	+in(tam):3
  tam		UNI	=	+in(tam_unicode):3
  tam		TAB	=	+in(tam_TAB):3
  tam		TSCII	=	+in(tam_TSCII):3
  tel		basic	=	+in(tel):3
  yu		basic	=	+srp(latin):3
  yu		unicode	=	+srp(latinunicode):3
  yu		yz	=	+srp(latinyz):3
  yu		unicodeyz	=	+srp(latinunicodeyz):3

! layout[4]	variant[4]	=	symbols
  ben		basic	=	+in(ben):4
  ben		probhat	=	+in(ben_probhat):4
  dev		basic	=	+in(deva):4
  dvorak		$dvoraklayouts	=	+%l(dvorak):4
  dvorak		basic	=	+us(dvorak):4
  dvorak		pl_basic	=	+pl(dvorak):4
  dvorak		pl	=	+pl(dvorak_quotes):4
  dvorak		pl_altquotes	=	+pl(dvorak_altquotes):4
  dzdwi		basic	=	+bt(basic):4
  guj		basic	=	+in(guj):4
  gur		basic	=	+in(guru):4
  ie		laptop	=	+ie(basic):4
  ie		CloGaelachLaptop	=	+ie(CloGaelach):4
  iu		basic	=	+ca(ike):4
  lo		basic	=	+la(basic):4
  kan		basic	=	+in(kan):4
  mal		basic	=	+in(mal):4
  mal		mlplusnum	=	+in(mal):4
  ogham		basic	=	+ie(ogam):4
  ogham		laptop	=	+ie(ogam):4
  ogham		is434	=	+ie(ogam_is434):4
  ogham		is434laptop	=	+ie(ogam_is434):4
  ori		basic	=	+in(ori):4
  sapmi		basic	=	+no(smi):4
  sapmi		nodeadkeys	=	+no(smi_nodeadkeys):4
  sapmi		sefi	=	+fi(smi):4
  sin		phonetic-static	=	+in(sin_phonetic):4
  syr		basic	=	+sy(syc):4
  syr		phonetic	=	+sy(syc_phonetic):4
  tam		INSCRIPT	=	+in(tam):4
  tam		UNI	=	+in(tam_unicode):4
  tam		TAB	=	+in(tam_TAB):4
  tam		TSCII	=	+in(tam_TSCII):4
  tel		basic	=	+in(tel):4
  yu		basic	=	+srp(latin):4
  yu		unicode	=	+srp(latinunicode):4
  yu		yz	=	+srp(latinyz):4
  yu		unicodeyz	=	+srp(latinunicodeyz):4

! model		=	symbols
  $inetkbds     =       +inet(%m)

! model		layout		=	compat
  pc98		nec/jp		=	pc98(basic)
  *		*		=	complete

! model		layout[1]	=	compat
  *		*		=	complete

! model		=	types
  *		=	complete

! option	=	symbols
  grp:shift_toggle	=	+group(shifts_toggle)
  grp:switch		=	+group(switch)
  grp:lswitch		=	+group(lswitch)
  grp:win_switch	=	+group(win_switch)
  grp:lwin_switch	=	+group(lwin_switch)
  grp:rwin_switch	=	+group(rwin_switch)
  grp:toggle		=	+group(toggle)
  grp:shifts_toggle	=	+group(shifts_toggle)
  grp:ctrls_toggle	=	+group(ctrls_toggle)
  grp:alts_toggle	=	+group(alts_toggle)
  grp:ctrl_shift_toggle	=	+group(ctrl_shift_toggle)
  grp:caps_toggle	=	+group(caps_toggle)
  grp:shift_caps_toggle	=	+group(shift_caps_toggle)
  grp:ctrl_alt_toggle	=	+group(ctrl_alt_toggle)
  grp:alt_shift_toggle	=	+group(alt_shift_toggle)
  grp:menu_toggle	=	+group(menu_toggle)
  grp:lwin_toggle	=	+group(lwin_toggle)
  grp:rwin_toggle	=	+group(rwin_toggle)
  grp:lshift_toggle	=	+group(lshift_toggle)
  grp:rshift_toggle	=	+group(rshift_toggle)
  grp:lctrl_toggle	=	+group(lctrl_toggle)
  grp:rctrl_toggle	=	+group(rctrl_toggle)
  grp:lalt_toggle	=	+group(lalt_toggle)
  lv3:switch		=	+level3(switch)
  lv3:ralt_switch	=	+level3(ralt_switch)
  lv3:lalt_switch	=	+level3(lalt_switch)
  lv3:alt_switch	=	+level3(alt_switch)
  lv3:menu_switch	=	+level3(menu_switch)
  lv3:win_switch	=	+level3(win_switch)
  lv3:lwin_switch	=	+level3(lwin_switch)
  lv3:rwin_switch	=	+level3(rwin_switch)
  caps:capslock		=	+capslock(capslock)
  caps:shiftlock	=	+capslock(shiftlock)
  caps:grouplock	=	+capslock(grouplock)
  ctrl:nocaps		=	+ctrl(nocaps)
  ctrl:swapcaps		=	+ctrl(swapcaps)
  ctrl:ctrl_ac		=	+ctrl(ctrl_ac)
  ctrl:ctrl_aa		=	+ctrl(ctrl_aa)
  ctrl:ctrl_ra		=	+ctrl(ctrl_ra)
  altwin:menu		=	+altwin(menu)
  altwin:meta_alt	=	+altwin(meta_alt)
  altwin:meta_win	=	+altwin(meta_win)
  altwin:left_meta_win	=	+altwin(left_meta_win)
  altwin:super_win	=	+altwin(super_win)
  altwin:hyper_win	=	+altwin(hyper_win)
  altwin:alt_super_win	=	+altwin(alt_super_win)
  compose:caps		=	+compose(caps)
  compose:ralt		=	+compose(ralt)
  compose:rwin		=	+compose(rwin)
  compose:menu		=	+compose(menu)
  compose:rctrl		=	+compose(rctrl)
  srvrkeys:none		=	+srvr_ctrl(no_srvr_keys)
  eurosign:e		=	+eurosign(e)
  eurosign:5		=	+eurosign(5)
  eurosign:2		=	+eurosign(2)

! option	=	compat
  grp_led:num		=	+lednum(group_lock)
  grp_led:caps		=	+ledcaps(group_lock)
  grp_led:scroll	=	+ledscroll(group_lock)
  grp:caps_toggle	=	+ledcaps(group_lock)


! option	=	types
  caps:internal			=	+caps(internal)
  caps:internal_nocancel	=	+caps(internal_nocancel)
  caps:shift			=	+caps(shift)
  caps:shift_nocancel		=	+caps(shift_nocancel)
  numpad:microsoft		=	+numpad(microsoft)
